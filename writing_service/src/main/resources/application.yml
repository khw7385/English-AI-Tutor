spring:
  application:
    name: writing
  profiles:
    group:
      dev: mysql-dev
      prod: mysql-prod
      test: test

server:
  port: 12307

sapling:
  api:
    key: ${SAPLING_API_KEY}

openai:
  api:
    key: ${OPENAI_API_KEY}
---
spring:
  config:
    activate:
      on-profile: test
  datasource:
    driver-class-name: org.h2.Driver
    url: 'jdbc:h2:tcp://localhost:9092/~/writing2'
    username: sa
    password:
  h2:
    console:
      path: /h2-console
      enabled: true
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true

openapi:
  service:
    title: writing-service doc
    version: 1.0.0
    url: http://localhost:12300
springdoc:
  api-docs:
    path: /writing-service/api-docs
  swagger-ui:
    path: /writing-service/swagger-ui
---
spring:
  config:
    activate:
      on-profile: mysql-dev
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${MYSQL_HOST}:${MYSQL_PORT}/${MYSQL_DATABASE}?serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    username: ${MYSQL_DATABASE_ID}
    password: ${MYSQL_DATABASE_PW}
    hikari:
      data-source-properties:
        rewriteBatchedStatements: true
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        show_sql: false
    database-platform: org.hibernate.dialect.MySQL8Dialect
    database: mysql

eureka:
  client:
    service-url:
      defaultZone: http://eureka:8761/eureka/
    register-with-eureka: true
    fetch-registry: true

openapi:
  service:
    title: writing-service doc
    version: 1.0.0
    url: http://gateway:12300
springdoc:
  api-docs:
    path: /writing-service/api-docs
  swagger-ui:
    path: /writing-service/swagger-ui



